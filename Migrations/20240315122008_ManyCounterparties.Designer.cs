// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Counterparties.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240315122008_ManyCounterparties")]
    partial class ManyCounterparties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Counterparty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.HasKey("Id");

                    b.ToTable("Counterparties");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Counterparty");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("CreditContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("CreditContractCounterparties", b =>
                {
                    b.Property<int>("ContractId")
                        .HasColumnType("int");

                    b.Property<int>("CounterpartyId")
                        .HasColumnType("int");

                    b.HasKey("ContractId", "CounterpartyId");

                    b.HasIndex("CounterpartyId");

                    b.ToTable("CreditContractCounterparties");
                });

            modelBuilder.Entity("CorporateCounterparty", b =>
                {
                    b.HasBaseType("Counterparty");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("CorporateCounterparty");
                });

            modelBuilder.Entity("PrivateCounterparty", b =>
                {
                    b.HasBaseType("Counterparty");

                    b.Property<string>("PersonName")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("PrivateCounterparty");
                });

            modelBuilder.Entity("CreditContractCounterparties", b =>
                {
                    b.HasOne("CreditContract", null)
                        .WithMany()
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Counterparty", null)
                        .WithMany()
                        .HasForeignKey("CounterpartyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
